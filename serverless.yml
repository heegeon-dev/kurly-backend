service: kurly-backend

plugins:
  - serverless-plugin-typescript
  - serverless-plugin-optimize
  - serverless-offline
  - serverless-plugin-warmup

provider:
  name: aws
  runtime: nodejs16.x
  region: ap-northeast-2

package:
  individually: true

functions:
  main:
    handler: src/lambda.handler
    warmup: true
    events:
      - http:
          method: any
          path: /{proxy+}
          cors: true

iamRoleStatements:
  - Effect: 'Allow'
    Action:
      - 'lambda:InvokeFunction'
    Resource: "*"
    
# resources:
#   Resources:
#     GatewayResponseDefault4XX:
#       Type: "AWS::ApiGateway::GatewayResponse"
#       Properties:
#         ResponseParameters:
#           gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
#           gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
#         ResponseType: DEFAULT_4XX
#         RestApiId:
#           Ref: "ApiGatewayRestApi"
#     GatewayResponseDefault5XX:
#       Type: "AWS::ApiGateway::GatewayResponse"
#       Properties:
#         ResponseParameters:
#           gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
#           gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
#         ResponseType: DEFAULT_5XX
#         RestApiId:
#           Ref: "ApiGatewayRestApi"